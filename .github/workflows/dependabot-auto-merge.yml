name: dependabot-auto-approve-and-merge

on:
  workflow_run:
    workflows: ["build-and-test.yml"]
    types: [completed]

permissions:
  pull-requests: write
  contents: write

jobs:
  dependabot-auto-approve-and-merge:
    runs-on: ubuntu-latest
    # Checking the author and fork will prevent your Action run failing on non-Dependabot PRs
    if: |
      github.event.repository.fork == false &&
      github.event.workflow_run.conclusion == 'success'
    # if: |
    #   github.event.repository.fork == false &&
    #   github.event.pull_request.user.login == 'dependabot[bot]'
    #   github.actor == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        uses: dependabot/fetch-metadata@v2
        id: dependabot-metadata

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get pull request information
        id: pr_info
        run: |
          echo "github.actor: ${{ github.actor }}"
          echo "github.event.pull_request: ${{ github.event }}"
      #    echo "::set-output name=user::${{ github.event.pull_request.user.login }}"
      #    echo "::set-output name=head_ref::${{ github.event.pull_request.head.ref }}"
      # if: github.event_name == 'pull_request'


      - name: Dry run merge pull request
        run: git merge --no-commit --no-ff "${{ github.event.pull_request.head.ref }}"

      - name: Check for conflicts
        id: check-conflicts
        run: |
          if git status | grep -q "both modified"; then
            echo "Conflict detected in the pull request. Please resolve conflicts."
            echo "::set-output name=is_success::false"
            exit 1
          else
            echo "No conflicts detected. Pull request can be merged."
            echo "::set-output name=is_success::true"
          fi

      # - name: Approve a PR if not already approved
      #   if: ${{
      #     steps.dependabot-metadata.outputs.update-type != 'version-update:semver-major' &&
      #     steps.check-conflicts.outputs.is_success == 'true'
      #     }}
      #   run: |
      #     gh pr checkout "$PR_URL" # sets the upstream metadata for `gh pr status`
      #     if [ "$(gh pr status --json reviewDecision -q .currentBranch.reviewDecision)" != "APPROVED" ];
      #     then gh pr review --approve "$PR_URL" && gh pr merge --auto --squash "${PR_URL}"
      #     else echo "PR already approved, skipping additional approvals to minimize emails/notification noise.";
      #     fi
      #   env:
      #     PR_URL: ${{github.event.pull_request.html_url}}
      #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      # - name: Auto-merge for Dependabot PRs
      #   if: ${{ steps.dependabot-metadata.outputs.update-type != 'version-update:semver-major' }}
      #   run: gh pr merge --auto --squash "$PR_URL"
      #   env:
      #     PR_URL: ${{github.event.pull_request.html_url}}
      #     GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
